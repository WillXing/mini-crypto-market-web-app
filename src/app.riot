
<app>
  <h1>Mini Crypto Market Web App</h1>
  <div if={!state.logging}>
    <div if={state.isLoggedIn}>
      <button if={state.isInFavoriteCoinsTable} onclick={goToAllList} style="margin-left: 8px" class="button">All coins list</button>
      <button if={!state.isInFavoriteCoinsTable} onclick={goToFavoriteList} style="margin-left: 8px" class="button">Favorite coins list</button>
    </div>
    <div if={!state.isLoggedIn}>
      <input onchange={event => login(event)} style="display: none;" type="file" id="file" placeholder="Keyfile" id="key_file">
      <label style="margin-left: 8px" class="button" for="file">Login (Choose key file)</label>
    </div>
  </div>
  <div if={state.logging}>
    <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>
  </div>
  <favorite-coins-table favorite_coins={state.favoriteCoins} if={state.isInFavoriteCoinsTable}/>
  <coins-table
    update_favorite_coins={updateFavoriteCoins}
    is_logged_in={state.isLoggedIn}
    wallet_address={state.walletAddress}
    favorite_coins={state.favoriteCoins}
    if={!state.isInFavoriteCoinsTable}
  />
  <style>
    .lds-ellipsis {
      display: inline-block;
      position: relative;
      width: 64px;
      height: 64px;
    }
    .lds-ellipsis div {
      position: absolute;
      top: 27px;
      width: 11px;
      height: 11px;
      border-radius: 50%;
      background: #9b4dca;
      animation-timing-function: cubic-bezier(0, 1, 1, 0);
    }
    .lds-ellipsis div:nth-child(1) {
      left: 6px;
      animation: lds-ellipsis1 0.6s infinite;
    }
    .lds-ellipsis div:nth-child(2) {
      left: 6px;
      animation: lds-ellipsis2 0.6s infinite;
    }
    .lds-ellipsis div:nth-child(3) {
      left: 26px;
      animation: lds-ellipsis2 0.6s infinite;
    }
    .lds-ellipsis div:nth-child(4) {
      left: 45px;
      animation: lds-ellipsis3 0.6s infinite;
    }
    @keyframes lds-ellipsis1 {
      0% {
        transform: scale(0);
      }
      100% {
        transform: scale(1);
      }
    }
    @keyframes lds-ellipsis3 {
      0% {
        transform: scale(1);
      }
      100% {
        transform: scale(0);
      }
    }
    @keyframes lds-ellipsis2 {
      0% {
        transform: translate(0, 0);
      }
      100% {
        transform: translate(19px, 0);
      }
    }
  </style>
  <script>
    import dappCore from './dapp-core.js';
    import CoinsTable from './coins-table.riot';
    import FavoriteCoinsTable from './favorite-coins-table.riot';

    export default {
      onBeforeMount(props, state) {
        this.state = {
          isInFavoriteCoinsTable: false,
          isLoggedIn: false,
          logging: false,
          walletAddress: "",
          favoriteCoins: []
        };
      },

      components: {
        CoinsTable,
        FavoriteCoinsTable
      },

      login(event) {
        const reader = new FileReader();
        reader.onerror = () => {
          reader.abort();
        }
        reader.addEventListener("load", () => {
          dappCore.login(reader.result).then(result => {
            this.update({
              isLoggedIn: true,
              walletAddress: result.walletAddress,
              favoriteCoins: result.favoriteCoins.split(',')
            })
          }).catch(err => {console.log(err)}).finally(() => {
            this.update({
              logging: false
            })
          });
        }, false)
        reader.readAsText(event.target.files[0])
        this.update({
          logging: true
        })
      },

      goToFavoriteList() {
        this.update({
          isInFavoriteCoinsTable: true
        })
      },

      goToAllList() {
        this.update({
          isInFavoriteCoinsTable: false
        })
      },

      updateFavoriteCoins() {
        dappCore.getFavoriteCoins(this.state.walletAddress).then(res => {
          this.update({
            favoriteCoins: res.split(',')
          })
        });
      }
    }
  </script>
</app>